# Generated by Django 5.2 on 2025-04-21 06:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webapp', '0002_userprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cleaner',
            fields=[
                ('userprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.userprofile')),
            ],
            bases=('webapp.userprofile',),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('property_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CleaningRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=20)),
                ('cleaner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.cleaner')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.property')),
            ],
        ),
        migrations.AddField(
            model_name='cleaner',
            name='cleaning_requests',
            field=models.ManyToManyField(blank=True, related_name='cleaners', to='webapp.cleaningrequest'),
        ),
        migrations.CreateModel(
            name='Homeowner',
            fields=[
                ('userprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.userprofile')),
                ('properties', models.ManyToManyField(blank=True, related_name='homeowners', to='webapp.property')),
            ],
            bases=('webapp.userprofile',),
        ),
    ]
